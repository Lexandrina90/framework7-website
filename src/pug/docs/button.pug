extends ../_docs-template

block vars
  - var title = 'Button | Framework7 Documentation';

block docs-index

block content


  .docs-nav
    include ../_docs-menu
  .docs-content
    .motion-docs-page-title
      h1 Button
      script(async src="/js/motion/button.js")
      f7-motion-button(motion)

    p Framework7 comes with a bunch of ready to use buttons. All you need to do is add the appropriate classes to your links or submit/button inputs:
    h2 Button Layout
    p Button layout is pretty simple. Just add `button` class to links or submit/button inputs:
    :code(lang="html")
          <!-- link as button -->
          <a class="button">Button</a>

          <!-- <button> as button -->
          <button class="button">Button</button>

          <!-- <input type="submit"> as button -->
          <input type="submit" class="button" value="Button" />
    h2 Button Modifier Classes
    p There is a variety of different buttons in Framework7. Different button styles achieved by additional modifier classes and their combinations:
    table.props-table
      tbody
        tr
          td button-fill
          td Filled-style button
        tr
          td button-fill-ios
          td Button will have filled-style only in iOS theme
        tr
          td button-fill-md
          td Button will have filled-style only in MD theme
        tr
          td button-tonal
          td Tonal-style button
        tr
          td button-tonal-ios
          td Button will have tonal-style only in iOS theme
        tr
          td button-tonal-md
          td Button will have tonal-style only in MD theme
        tr
          td button-round
          td Rounded button
        tr
          td button-round-ios
          td Button will be rounded only in iOS theme
        tr
          td button-round-md
          td Button will be rounded only in MD theme
        tr
          td button-small
          td Small button
        tr
          td button-small-ios
          td Button will be small only in iOS theme
        tr
          td button-small-md
          td Button will be small only in MD theme
        tr
          td button-large
          td Large button
        tr
          td button-large-ios
          td Button will be large only in iOS theme
        tr
          td button-large-md
          td Button will be large only in MD theme
        tr
          td button-raised
          td Raised button
        tr
          td button-raised-ios
          td Raised button in iOS theme only
        tr
          td button-raised-md
          td Raised button in MD theme only
        tr
          td button-outline
          td Outline button
        tr
          td button-outline-ios
          td Outline button in iOS theme only
        tr
          td button-outline-md
          td Outline button in MD theme only
        tr
          td button-active
          td Active/selected button state. For use inside of Segmented
        tr
          td button-preloader
          td Should be added to button with preloader to make loading buttons
        tr
          td button-loading
          td Controls button state to show/hide preloader and hide/show button text (switch button to loading state). `button-preloader` should be also added to button
        tr
          td color-[color]
          td Color button, where <b>[color]</b> is one of the <a href="color-themes.html">default colors</a>
    p And of course we can mix these classes:
    :code(lang="html")
          <!-- rounded button -->
          <a class="button button-round">Button</a>

          <!-- rounded and filled button -->
          <a class="button button-round button-fill">Button</a>

          <!-- raised, round, fill, large button -->
          <a class="button button-raised button-round button-fill button-large">Button</a>

          <!-- small red button -->
          <a class="button button-small color-red">Button</a>
    h2 Preloader Button
    p It is possible to create dynamic preloader button. Such button must have Preloader inside and button text wrapped with `<span>` tag, and additional `button-preloader` class:
    ```html
      <button class="button button-preloader">
        <span class="preloader"></span>
        <span>Load</span>
      </button>
    ```
    p And to show preloader we need to add extra `button-loading` class (it will show inner preloader and hide button text):
    ```html
      <button class="button button-preloader button-loading">
        <span class="preloader"></span>
        <span>Load</span>
      </button>
    ```

    +cssVars('button')


    h2 Examples
    +examplePreview('core', 'buttons.html', 'buttons')
