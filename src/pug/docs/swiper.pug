extends ../_docs-template

block vars
  - var title = 'Swiper Slider | Framework7 Documentation';

block docs-index

block content


  .docs-nav
    include ../_docs-menu
  .docs-content
    .motion-docs-page-title
      h1 Swiper Slider
      script(src="/js/motion/swiper.js")
      f7-motion-swiper(motion)

    p Framework7 comes with powerful and most modern touch slider ever - <a href="https://swiperjs.com/">Swiper Slider</a> with super flexible configuration and lot, lot of features.
    h2 Swiper Slider HTML Layout
    p Swiper HTML layout is pretty simple:
    :code(lang="html")
      <!-- Slider container -->
      <div class="swiper">
          <!-- Slides wrapper -->
          <div class="swiper-wrapper">
              <!-- Slides -->
              <div class="swiper-slide">Slide 1</div>
              <div class="swiper-slide">Slide 2</div>
              <div class="swiper-slide">Slide 3</div>
              ... other slides ...
          </div>
          <!-- Pagination, if required -->
          <div class="swiper-pagination"></div>
      </div>
    p Where:
    ul
      li
        p `swiper` - main slider container with slides and paginations. Required element
        ul
          li
            p `swiper-wrapper` - additional wrapper for slides. Required element
            ul
              li
                p `swiper-slide` - single slide element. Could contain any HTML inside
          li
            p `swiper-pagination` - container with pagination bullets. Note, that pagination bullets will be created automatically. Optional element

    h2 Swiper App Methods
    p Now, when we have Swiper' HTML, we need to initialize it. We need to use related App's method:
    .method-wrap
      p
        span.method app.swiper.create(<span>swiperEl</span>, <span>parameters</span>)
        span - initialize slider with options
      ul.method-parameters
        li
          span.parameter swiperEl
          |  - <span class="parameter-type">HTMLElement</span> or <span class="parameter-type">string</span> (with CSS Selector) of swiper container HTML element. Required.
        li
          span.parameter parameters
          |  - <span class="parameter-type">object</span> - object with Swiper parameters. Optional.

        li.method-returns Method returns initialized Swiper instance
    .method-wrap
      p
        span.method app.swiper.destroy(<span>swiperEl</span>)
        span - destroy Swiper instance
      ul.method-parameters
        li
          span.parameter swiperEl
          |  - <span class="parameter-type">HTMLElement</span> or <span class="parameter-type">string</span> (with CSS Selector) of swiper container HTML element. Required.
    .method-wrap
      p
        span.method app.swiper.get(<span>swiperEl</span>)
        span - get Swiper instance by HTML element
      ul.method-parameters
        li
          span.parameter swiperEl
          |  - <span class="parameter-type">HTMLElement</span> or <span class="parameter-type">string</span> (with CSS Selector) of swiper container HTML element. Required.

    p For example:
    :code(lang="js")
          var swiper = app.swiper.create('.swiper', {
              speed: 400,
              spaceBetween: 100
          });
    h2 Swiper API (Parameters, Methods And Properties)
    p Check out <a href="https://swiperjs.com/swiper-api#parameters" target="_blank">Swiper API Website</a> for the most relevant API parameters and methods.
    .important-note
      p Framework7's version of Swiper doesn't contain <b>History</b> and <b>Hash Navigation</b> modules

    h2 Swiper Element
    p Since Framework7 v8, it is highly recommended to use <a href="https://swiperjs.com/element/" target="_blank">Swiper Element</a> instead, it provides much easier way to define Swiper with parameters in HTML, and Swiper custom elements are already registered in Framework7.


    +cssVars('swiper')


    h2 Examples
    +examplePreview('core', 'swiper-multiple.html', 'swiper/swiper-multiple')
